{"version":3,"sources":["domData.js"],"names":["METAL_DATA","domData","element","opt_name","opt_initialVal"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,KAAMA,aAAa,gBAAnB;;KAEMC,O;;;;;;;uBASMC,O,EAASC,Q,EAAUC,c,EAAgB;AAC7C,QAAI,CAACF,QAAQF,UAAR,CAAL,EAA0B;AACzBE,aAAQF,UAAR,IAAsB,EAAtB;AACA;AACD,QAAI,CAACG,QAAL,EAAe;AACd,YAAOD,QAAQF,UAAR,CAAP;AACA;AACD,QAAI,CAACE,QAAQF,UAAR,EAAoBG,QAApB,CAAD,IAAkCC,cAAtC,EAAsD;AACrDF,aAAQF,UAAR,EAAoBG,QAApB,IAAgCC,cAAhC;AACA;AACD,WAAOF,QAAQF,UAAR,EAAoBG,QAApB,CAAP;AACA;;;uBAOUD,O,EAAS;AACnB,WAAO,CAAC,CAACA,QAAQF,UAAR,CAAT;AACA;;;;;;mBAGaC,O","file":"domData.js","sourcesContent":["'use strict';\n\nconst METAL_DATA = '__metal_data__';\n\nclass domData {\n\t/**\n\t * Gets Metal.js's data for the given element.\n\t * @param {!Element} element\n\t * @param {string=} opt_name Optional property from the data to be returned.\n\t * @param {*} opt_initialVal Optinal value to the set the requested property\n\t *     to if it doesn't exist yet in the data.\n\t * @return {!Object}\n\t */\n\tstatic get(element, opt_name, opt_initialVal) {\n\t\tif (!element[METAL_DATA]) {\n\t\t\telement[METAL_DATA] = {};\n\t\t}\n\t\tif (!opt_name) {\n\t\t\treturn element[METAL_DATA];\n\t\t}\n\t\tif (!element[METAL_DATA][opt_name] && opt_initialVal) {\n\t\t\telement[METAL_DATA][opt_name] = opt_initialVal;\n\t\t}\n\t\treturn element[METAL_DATA][opt_name];\n\t}\n\n\t/**\n\t * Checks if the given element has data stored in it.\n\t * @param {!Element} element\n\t * @return {boolean}\n\t */\n\tstatic has(element) {\n\t\treturn !!element[METAL_DATA];\n\t}\n}\n\nexport default domData;\n"]}