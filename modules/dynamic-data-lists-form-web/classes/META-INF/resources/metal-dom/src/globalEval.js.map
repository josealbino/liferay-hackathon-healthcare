{"version":3,"sources":["globalEval.js"],"names":["globalEval","text","opt_appendFn","script","document","createElement","head","appendChild","src","opt_callback","callback","type","nextTick","runFile","run","element","scripts","querySelectorAll","length","runScriptsInOrder","index","runScript","item"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAQMA,U;;;;;;;uBAQMC,I,EAAMC,Y,EAAc;AAC9B,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,WAAOF,IAAP,GAAcA,IAAd;AACA,QAAIC,YAAJ,EAAkB;AACjBA,kBAAaC,MAAb;AACA,KAFD,MAEO;AACNC,cAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;AACD,2BAAaA,MAAb;AACA,WAAOA,MAAP;AACA;;;2BAWcK,G,EAAKC,Y,EAAcP,Y,EAAc;AAC/C,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAF,WAAOK,GAAP,GAAaA,GAAb;;AAEA,QAAME,WAAW,SAAXA,QAAW,GAAW;AAC3B,4BAAaP,MAAb;AACAM,qBAAgBA,cAAhB;AACA,KAHD;AAIA,mBAAKN,MAAL,EAAa,MAAb,EAAqBO,QAArB;AACA,mBAAKP,MAAL,EAAa,OAAb,EAAsBO,QAAtB;;AAEA,QAAIR,YAAJ,EAAkB;AACjBA,kBAAaC,MAAb;AACA,KAFD,MAEO;AACNC,cAASE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA;;AAED,WAAOA,MAAP;AACA;;;6BAWgBA,M,EAAQM,Y,EAAcP,Y,EAAc;AACpD,QAAMQ,WAAW,SAAXA,QAAW,GAAW;AAC3BD,qBAAgBA,cAAhB;AACA,KAFD;AAGA,QAAIN,OAAOQ,IAAP,IAAeR,OAAOQ,IAAP,KAAgB,iBAAnC,EAAsD;AACrD,kBAAMC,QAAN,CAAeF,QAAf;AACA;AACA;AACD,2BAAaP,MAAb;AACA,QAAIA,OAAOK,GAAX,EAAgB;AACf,YAAOR,WAAWa,OAAX,CAAmBV,OAAOK,GAA1B,EAA+BC,YAA/B,EAA6CP,YAA7C,CAAP;AACA,KAFD,MAEO;AACN,kBAAMU,QAAN,CAAeF,QAAf;AACA,YAAOV,WAAWc,GAAX,CAAeX,OAAOF,IAAtB,EAA4BC,YAA5B,CAAP;AACA;AACD;;;uCAU0Ba,O,EAASN,Y,EAAcP,Y,EAAc;AAC/D,QAAMc,UAAUD,QAAQE,gBAAR,CAAyB,QAAzB,CAAhB;AACA,QAAID,QAAQE,MAAZ,EAAoB;AACnBlB,gBAAWmB,iBAAX,CAA6BH,OAA7B,EAAsC,CAAtC,EAAyCP,YAAzC,EAAuDP,YAAvD;AACA,KAFD,MAEO,IAAIO,YAAJ,EAAkB;AACxB,kBAAMG,QAAN,CAAeH,YAAf;AACA;AACD;;;qCAWwBO,O,EAASI,K,EAAOX,Y,EAAcP,Y,EAAc;AACpEF,eAAWqB,SAAX,CAAqBL,QAAQM,IAAR,CAAaF,KAAb,CAArB,EAA0C,YAAW;AACpD,SAAIA,QAAQJ,QAAQE,MAAR,GAAiB,CAA7B,EAAgC;AAC/BlB,iBAAWmB,iBAAX,CAA6BH,OAA7B,EAAsCI,QAAQ,CAA9C,EAAiDX,YAAjD,EAA+DP,YAA/D;AACA,MAFD,MAEO,IAAIO,YAAJ,EAAkB;AACxB,mBAAMG,QAAN,CAAeH,YAAf;AACA;AACD,KAND,EAMGP,YANH;AAOA;;;;;;mBAGaF,U","file":"globalEval.js","sourcesContent":["'use strict';\n\nimport { async } from 'metal';\nimport { exitDocument, once } from './dom';\n\n/**\n * Utility functions for running javascript code in the global scope.\n */\nclass globalEval {\n\t/**\n\t * Evaluates the given string in the global scope.\n\t * @param {string} text\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic run(text, opt_appendFn) {\n\t\tconst script = document.createElement('script');\n\t\tscript.text = text;\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\t\texitDocument(script);\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the given javascript file in the global scope.\n\t * @param {string} src The file's path.\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runFile(src, opt_callback, opt_appendFn) {\n\t\tconst script = document.createElement('script');\n\t\tscript.src = src;\n\n\t\tconst callback = function() {\n\t\t\texitDocument(script);\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tonce(script, 'load', callback);\n\t\tonce(script, 'error', callback);\n\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(script);\n\t\t} else {\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\n\t\treturn script;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given script element.\n\t * @param {!Element} script\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} script\n\t */\n\tstatic runScript(script, opt_callback, opt_appendFn) {\n\t\tconst callback = function() {\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tif (script.type && script.type !== 'text/javascript') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\t\texitDocument(script);\n\t\tif (script.src) {\n\t\t\treturn globalEval.runFile(script.src, opt_callback, opt_appendFn);\n\t\t} else {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn globalEval.run(script.text, opt_appendFn);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluates any script tags present in the given element.\n\t * @param {!Element} element\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInElement(element, opt_callback, opt_appendFn) {\n\t\tconst scripts = element.querySelectorAll('script');\n\t\tif (scripts.length) {\n\t\t\tglobalEval.runScriptsInOrder(scripts, 0, opt_callback, opt_appendFn);\n\t\t} else if (opt_callback) {\n\t\t\tasync.nextTick(opt_callback);\n\t\t}\n\t}\n\n\t/**\n\t * Runs the given scripts elements in the order that they appear.\n\t * @param {!NodeList} scripts\n\t * @param {number} index\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runScriptsInOrder(scripts, index, opt_callback, opt_appendFn) {\n\t\tglobalEval.runScript(scripts.item(index), function() {\n\t\t\tif (index < scripts.length - 1) {\n\t\t\t\tglobalEval.runScriptsInOrder(scripts, index + 1, opt_callback, opt_appendFn);\n\t\t\t} else if (opt_callback) {\n\t\t\t\tasync.nextTick(opt_callback);\n\t\t\t}\n\t\t}, opt_appendFn);\n\t}\n}\n\nexport default globalEval;\n"]}