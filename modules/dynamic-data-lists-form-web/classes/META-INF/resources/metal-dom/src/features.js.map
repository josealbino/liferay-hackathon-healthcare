{"version":3,"sources":["features.js"],"names":["features","animationEventName_","undefined","animation","checkAnimationEventName_","transition","type","prefixes","typeTitleCase","replaceInterval","substring","toUpperCase","suffixes","i","length","animationElement_","style","toLowerCase","attrOrderChange_","originalContent","element","document","createElement","innerHTML"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAQMA,Q;;;;;;;6CAO4B;AAChC,QAAIA,SAASC,mBAAT,KAAiCC,SAArC,EAAgD;AAC/CF,cAASC,mBAAT,GAA+B;AAC9BE,iBAAWH,SAASI,wBAAT,CAAkC,WAAlC,CADmB;AAE9BC,kBAAYL,SAASI,wBAAT,CAAkC,YAAlC;AAFkB,MAA/B;AAIA;AACD,WAAOJ,SAASC,mBAAhB;AACA;;;4CAO+BK,I,EAAM;AACrC,QAAMC,WAAW,CAAC,QAAD,EAAW,IAAX,EAAiB,GAAjB,EAAsB,EAAtB,CAAjB;AACA,QAAMC,gBAAgB,cAAOC,eAAP,CAAuBH,IAAvB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCA,KAAKI,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,EAAnC,CAAtB;AACA,QAAMC,WAAW,CAAIJ,aAAJ,UAA2BA,aAA3B,UAAkDA,aAAlD,UAAyEF,IAAzE,SAAjB;AACA,SAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIN,SAASO,MAA7B,EAAqCD,GAArC,EAA0C;AACzC,SAAIb,SAASe,iBAAT,CAA2BC,KAA3B,CAAiCT,SAASM,CAAT,IAAcL,aAA/C,MAAkEN,SAAtE,EAAiF;AAChF,aAAOK,SAASM,CAAT,EAAYI,WAAZ,KAA4BL,SAASC,CAAT,CAAnC;AACA;AACD;AACD,WAAUP,IAAV;AACA;;;0CAQ6B;AAC7B,QAAIN,SAASkB,gBAAT,KAA8BhB,SAAlC,EAA6C;AAC5C,SAAMiB,kBAAkB,2CAAxB;AACA,SAAMC,UAAUC,SAASC,aAAT,CAAuB,KAAvB,CAAhB;AACA,sBAAOF,OAAP,EAAgBD,eAAhB;AACAnB,cAASkB,gBAAT,GAA4BC,oBAAoBC,QAAQG,SAAxD;AACA;AACD,WAAOvB,SAASkB,gBAAhB;AACA;;;;;;AAGFlB,UAASe,iBAAT,GAA6BM,SAASC,aAAT,CAAuB,KAAvB,CAA7B;AACAtB,UAASC,mBAAT,GAA+BC,SAA/B;AACAF,UAASkB,gBAAT,GAA4BhB,SAA5B;;mBAEeF,Q","file":"features.js","sourcesContent":["'use strict';\n\nimport { append } from './dom';\nimport { string } from 'metal';\n\n/**\n * Class with static methods responsible for doing browser feature checks.\n */\nclass features {\n\t/**\n\t * Some browsers still supports prefixed animation events. This method can\n\t * be used to retrieve the current browser event name for both, animation\n\t * and transition.\n\t * @return {object}\n\t */\n\tstatic checkAnimationEventName() {\n\t\tif (features.animationEventName_ === undefined) {\n\t\t\tfeatures.animationEventName_ = {\n\t\t\t\tanimation: features.checkAnimationEventName_('animation'),\n\t\t\t\ttransition: features.checkAnimationEventName_('transition')\n\t\t\t};\n\t\t}\n\t\treturn features.animationEventName_;\n\t}\n\n\t/**\n\t * @protected\n\t * @param {string} type Type to test: animation, transition.\n\t * @return {string} Browser event name.\n\t */\n\tstatic checkAnimationEventName_(type) {\n\t\tconst prefixes = ['Webkit', 'MS', 'O', ''];\n\t\tconst typeTitleCase = string.replaceInterval(type, 0, 1, type.substring(0, 1).toUpperCase());\n\t\tconst suffixes = [`${typeTitleCase}End`, `${typeTitleCase}End`, `${typeTitleCase}End`, `${type}end`];\n\t\tfor (let i = 0; i < prefixes.length; i++) {\n\t\t\tif (features.animationElement_.style[prefixes[i] + typeTitleCase] !== undefined) {\n\t\t\t\treturn prefixes[i].toLowerCase() + suffixes[i];\n\t\t\t}\n\t\t}\n\t\treturn `${type}end`;\n\t}\n\n\t/**\n\t * Some browsers (like IE9) change the order of element attributes, when html\n\t * is rendered. This method can be used to check if this behavior happens on\n\t * the current browser.\n\t * @return {boolean}\n\t */\n\tstatic checkAttrOrderChange() {\n\t\tif (features.attrOrderChange_ === undefined) {\n\t\t\tconst originalContent = '<div data-component=\"\" data-ref=\"\"></div>';\n\t\t\tconst element = document.createElement('div');\n\t\t\tappend(element, originalContent);\n\t\t\tfeatures.attrOrderChange_ = originalContent !== element.innerHTML;\n\t\t}\n\t\treturn features.attrOrderChange_;\n\t}\n}\n\nfeatures.animationElement_ = document.createElement('div');\nfeatures.animationEventName_ = undefined;\nfeatures.attrOrderChange_ = undefined;\n\nexport default features;\n"]}