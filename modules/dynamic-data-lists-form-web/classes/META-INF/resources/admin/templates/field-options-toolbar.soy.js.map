{"version":3,"sources":["field-options-toolbar.soy.js"],"names":["templates","goog","loadModule","exports","module","soy","require","soydata","IncrementalDom","ie_open","elementOpen","ie_close","elementClose","ie_void","elementVoid","ie_open_start","elementOpenStart","ie_open_end","elementOpenEnd","itext","text","iattr","attr","$render","opt_data","opt_ignored","opt_ijData","asserts","assertType","toolbarButtonIcon","Function","UnsanitizedText","isString","toolbarTemplateContext","isObject","$field_settings_toolbar_list","options","render","DEBUG","soyTemplateName","assertArray","optionList107","optionListLen107","length","optionIndex107","optionData107","$field_settings_toolbar_item","option","field_settings_toolbar_list","assertObject","buttonClass","handler","label","dyn18","field_settings_toolbar_item","params","types","DDLFieldSettingsToolbar","register"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\nvar templates;\ngoog.loadModule(function(exports) {\n\n// This file was automatically generated from field-options-toolbar.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace DDLFieldSettingsToolbar.\n * @public\n */\n\ngoog.module('DDLFieldSettingsToolbar.incrementaldom');\n\n/** @suppress {extraRequire} */\nvar soy = goog.require('soy');\n/** @suppress {extraRequire} */\nvar soydata = goog.require('soydata');\n/** @suppress {extraRequire} */\ngoog.require('goog.asserts');\n/** @suppress {extraRequire} */\ngoog.require('soy.asserts');\n/** @suppress {extraRequire} */\ngoog.require('goog.i18n.bidi');\n/** @suppress {extraRequire} */\ngoog.require('goog.string');\nvar IncrementalDom = goog.require('incrementaldom');\nvar ie_open = IncrementalDom.elementOpen;\nvar ie_close = IncrementalDom.elementClose;\nvar ie_void = IncrementalDom.elementVoid;\nvar ie_open_start = IncrementalDom.elementOpenStart;\nvar ie_open_end = IncrementalDom.elementOpenEnd;\nvar itext = IncrementalDom.text;\nvar iattr = IncrementalDom.attr;\n\n\n/**\n * @param {{\n *    toolbarButtonIcon: (!soydata.SanitizedHtml|string),\n *    toolbarTemplateContext: (null|undefined|{options: !Array<{buttonClass: string, handler: string, label: string}>})\n * }} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object<string, *>=} opt_ijData\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $render(opt_data, opt_ignored, opt_ijData) {\n  soy.asserts.assertType((opt_data.toolbarButtonIcon instanceof Function) || (opt_data.toolbarButtonIcon instanceof soydata.UnsanitizedText) || goog.isString(opt_data.toolbarButtonIcon), 'toolbarButtonIcon', opt_data.toolbarButtonIcon, 'Function');\n  var toolbarButtonIcon = /** @type {Function} */ (opt_data.toolbarButtonIcon);\n  soy.asserts.assertType(opt_data.toolbarTemplateContext == null || goog.isObject(opt_data.toolbarTemplateContext), 'toolbarTemplateContext', opt_data.toolbarTemplateContext, 'null|undefined|{options: !Array<{buttonClass: string, handler: string, label: string}>}');\n  var toolbarTemplateContext = /** @type {null|undefined|{options: !Array<{buttonClass: string, handler: string, label: string}>}} */ (opt_data.toolbarTemplateContext);\n  ie_open('div', null, null,\n      'class', 'dropdown open');\n    ie_open('a', null, null,\n        'class', 'dropdown-toggle icon-monospaced',\n        'data-toggle', 'dropdown',\n        'href', 'javascript:;');\n      toolbarButtonIcon();\n    ie_close('a');\n    $field_settings_toolbar_list({options: toolbarTemplateContext.options}, null, opt_ijData);\n  ie_close('div');\n}\nexports.render = $render;\nif (goog.DEBUG) {\n  $render.soyTemplateName = 'DDLFieldSettingsToolbar.render';\n}\n\n\n/**\n * @param {{\n *    options: !Array<{buttonClass: string, handler: string, label: string}>\n * }} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object<string, *>=} opt_ijData\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $field_settings_toolbar_list(opt_data, opt_ignored, opt_ijData) {\n  var options = goog.asserts.assertArray(opt_data.options, \"expected parameter 'options' of type list<[buttonClass: string, handler: string, label: string]>.\");\n  ie_open('ul', null, null,\n      'class', 'dropdown-menu dropdown-menu-right');\n    var optionList107 = options;\n    var optionListLen107 = optionList107.length;\n    for (var optionIndex107 = 0; optionIndex107 < optionListLen107; optionIndex107++) {\n      var optionData107 = optionList107[optionIndex107];\n      $field_settings_toolbar_item({option: optionData107}, null, opt_ijData);\n    }\n  ie_close('ul');\n}\nexports.field_settings_toolbar_list = $field_settings_toolbar_list;\nif (goog.DEBUG) {\n  $field_settings_toolbar_list.soyTemplateName = 'DDLFieldSettingsToolbar.field_settings_toolbar_list';\n}\n\n\n/**\n * @param {{\n *    option: {buttonClass: string, handler: string, label: string}\n * }} opt_data\n * @param {(null|undefined)=} opt_ignored\n * @param {Object<string, *>=} opt_ijData\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $field_settings_toolbar_item(opt_data, opt_ignored, opt_ijData) {\n  var option = goog.asserts.assertObject(opt_data.option, \"expected parameter 'option' of type [buttonClass: string, handler: string, label: string].\");\n  ie_open('li');\n    ie_open('a', null, null,\n        'class', option.buttonClass || '',\n        'data-handler', option.handler,\n        'href', 'javascript:;',\n        'title', option.label);\n      var dyn18 = option.label;\n      if (typeof dyn18 == 'function') dyn18(); else if (dyn18 != null) itext(dyn18);\n    ie_close('a');\n  ie_close('li');\n}\nexports.field_settings_toolbar_item = $field_settings_toolbar_item;\nif (goog.DEBUG) {\n  $field_settings_toolbar_item.soyTemplateName = 'DDLFieldSettingsToolbar.field_settings_toolbar_item';\n}\n\nexports.render.params = [\"toolbarButtonIcon\"];\nexports.render.types = {\"toolbarButtonIcon\":\"html\"};\nexports.field_settings_toolbar_list.params = [];\nexports.field_settings_toolbar_list.types = {};\nexports.field_settings_toolbar_item.params = [];\nexports.field_settings_toolbar_item.types = {};\ntemplates = exports;\nreturn exports;\n\n});\n\nclass DDLFieldSettingsToolbar extends Component {}\nSoy.register(DDLFieldSettingsToolbar, templates);\nexport { DDLFieldSettingsToolbar, templates };\nexport default templates;\n/* jshint ignore:end */\n"]}