{"version":3,"sources":["ComponentRegistry.js"],"names":["ComponentRegistry","name","constructorFn","components_","console","error","opt_name","hasOwnProperty","NAME"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KASMA,iB;;;;;;;kCAQiBC,I,EAAM;AAC3B,QAAMC,gBAAgBF,kBAAkBG,WAAlB,CAA8BF,IAA9B,CAAtB;AACA,QAAI,CAACC,aAAL,EAAoB;AACnBE,aAAQC,KAAR,iEAC8DJ,IAD9D;AAIA;AACD,WAAOC,aAAP;AACA;;;4BAUeA,a,EAAeI,Q,EAAU;AACxC,QAAIL,OAAOK,QAAX;AACA,QAAI,CAACL,IAAL,EAAW;AACV,SAAIC,cAAcK,cAAd,CAA6B,MAA7B,CAAJ,EAA0C;AACzCN,aAAOC,cAAcM,IAArB;AACA,MAFD,MAEO;AACNP,aAAO,4BAAgBC,aAAhB,CAAP;AACA;AACD;AACDA,kBAAcM,IAAd,GAAqBP,IAArB;AACAD,sBAAkBG,WAAlB,CAA8BF,IAA9B,IAAsCC,aAAtC;AACA;;;;;;AAGF;;;;;;AAMAF,mBAAkBG,WAAlB,GAAgC,EAAhC;;mBAEeH,iB","file":"ComponentRegistry.js","sourcesContent":["'use strict';\n\nimport { getFunctionName } from 'metal';\n\n/**\n * The component registry is used to register components, so they can\n * be accessible by name.\n * @type {Object}\n */\nclass ComponentRegistry {\n\t/**\n\t * Gets the constructor function for the given component name, or\n\t * undefined if it hasn't been registered yet.\n\t * @param {string} name The component's name.\n\t * @return {?function()}\n\t * @static\n\t */\n\tstatic getConstructor(name) {\n\t\tconst constructorFn = ComponentRegistry.components_[name];\n\t\tif (!constructorFn) {\n\t\t\tconsole.error(\n\t\t\t\t`There's no constructor registered for the component named ${name}.\n\t\t\t\tComponents need to be registered via ComponentRegistry.register.`\n\t\t\t);\n\t\t}\n\t\treturn constructorFn;\n\t}\n\n\t/**\n\t * Registers a component, so it can be found by its name.\n\t * @param {!Function} constructorFn The component's constructor function.\n\t * @param {string=} opt_name Name of the registered component. If none is given\n\t *   the name defined by the NAME static variable will be used instead. If that\n\t *   isn't set as well, the name of the constructor function will be used.\n\t * @static\n\t */\n\tstatic register(constructorFn, opt_name) {\n\t\tlet name = opt_name;\n\t\tif (!name) {\n\t\t\tif (constructorFn.hasOwnProperty('NAME')) {\n\t\t\t\tname = constructorFn.NAME;\n\t\t\t} else {\n\t\t\t\tname = getFunctionName(constructorFn);\n\t\t\t}\n\t\t}\n\t\tconstructorFn.NAME = name;\n\t\tComponentRegistry.components_[name] = constructorFn;\n\t}\n}\n\n/**\n * Holds all registered components, indexed by their names.\n * @type {!Object<string, function()>}\n * @protected\n * @static\n */\nComponentRegistry.components_ = {};\n\nexport default ComponentRegistry;\n"]}