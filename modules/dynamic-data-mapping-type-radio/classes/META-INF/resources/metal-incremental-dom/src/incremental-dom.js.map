{"version":3,"sources":["incremental-dom.js"],"names":["IncrementalDOM","IncrementalDOMString","global","scope","exports","window"],"mappings":";;;KAAYA,c;;KACAC,oB;;;;;;;;;;;;;;;;;;;AAGZ,KAAI,0BAAJ,EAAoB;AACnB;AACA;AACA;AACA;AACAC,SAAOF,cAAP,GAAwBC,oBAAxB;AACA,EAND,MAMO;AACN,MAAIE,QAAS,OAAOC,OAAP,KAAmB,WAAnB,IAAkC,OAAOF,MAAP,KAAkB,WAArD,GAAoEA,MAApE,GAA6EG,MAAzF;;AAEAF,QAAMH,cAAN,GAAuBA,cAAvB;AACA","file":"incremental-dom.js","sourcesContent":["import * as IncrementalDOM from 'incremental-dom';\nimport * as IncrementalDOMString from 'incremental-dom-string';\nimport { isServerSide } from 'metal';\n\nif (isServerSide()) {\n\t// Overrides global.IncrementalDOM virtual elements with incremental dom\n\t// string implementation for server side rendering. At the moment it does not\n\t// override for Node.js tests since tests are using jsdom to simulate the\n\t// browser.\n\tglobal.IncrementalDOM = IncrementalDOMString;\n} else {\n\tvar scope = (typeof exports !== 'undefined' && typeof global !== 'undefined') ? global : window;\n\n\tscope.IncrementalDOM =Â IncrementalDOM;\n}\n"]}