{"version":3,"sources":["globalEvalStyles.js"],"names":["globalEvalStyles","text","opt_appendFn","style","document","createElement","innerHTML","head","appendChild","href","opt_callback","link","rel","runStyle","callback","nextTick","tagName","element","styles","querySelectorAll","length","loadCount","i"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAQMA,gB;;;;;;;uBAQMC,I,EAAMC,Y,EAAc;AAC9B,QAAMC,QAAQC,SAASC,aAAT,CAAuB,OAAvB,CAAd;AACAF,UAAMG,SAAN,GAAkBL,IAAlB;AACA,QAAIC,YAAJ,EAAkB;AACjBA,kBAAaC,KAAb;AACA,KAFD,MAEO;AACNC,cAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;AACD,WAAOA,KAAP;AACA;;;2BAWcM,I,EAAMC,Y,EAAcR,Y,EAAc;AAChD,QAAMS,OAAOP,SAASC,aAAT,CAAuB,MAAvB,CAAb;AACAM,SAAKC,GAAL,GAAW,YAAX;AACAD,SAAKF,IAAL,GAAYA,IAAZ;AACAT,qBAAiBa,QAAjB,CAA0BF,IAA1B,EAAgCD,YAAhC,EAA8CR,YAA9C;AACA,WAAOS,IAAP;AACA;;;4BAWeR,K,EAAOO,Y,EAAcR,Y,EAAc;AAClD,QAAMY,WAAW,SAAXA,QAAW,GAAW;AAC3BJ,qBAAgBA,cAAhB;AACA,KAFD;AAGA,QAAIP,MAAMS,GAAN,IAAaT,MAAMS,GAAN,KAAc,YAA/B,EAA6C;AAC5C,kBAAMG,QAAN,CAAeD,QAAf;AACA;AACA;;AAED,QAAIX,MAAMa,OAAN,KAAkB,OAAtB,EAA+B;AAC9B,kBAAMD,QAAN,CAAeD,QAAf;AACA,KAFD,MAEO;AACN,oBAAKX,KAAL,EAAY,MAAZ,EAAoBW,QAApB;AACA,oBAAKX,KAAL,EAAY,OAAZ,EAAqBW,QAArB;AACA;;AAED,QAAIZ,YAAJ,EAAkB;AACjBA,kBAAaC,KAAb;AACA,KAFD,MAEO;AACNC,cAASG,IAAT,CAAcC,WAAd,CAA0BL,KAA1B;AACA;;AAED,WAAOA,KAAP;AACA;;;sCAUyBc,O,EAASP,Y,EAAcR,Y,EAAc;AAC9D,QAAMgB,SAASD,QAAQE,gBAAR,CAAyB,YAAzB,CAAf;AACA,QAAID,OAAOE,MAAP,KAAkB,CAAlB,IAAuBV,YAA3B,EAAyC;AACxC,kBAAMK,QAAN,CAAeL,YAAf;AACA;AACA;;AAED,QAAIW,YAAY,CAAhB;AACA,QAAMP,WAAW,SAAXA,QAAW,GAAW;AAC3B,SAAIJ,gBAAgB,EAAEW,SAAF,KAAgBH,OAAOE,MAA3C,EAAmD;AAClD,mBAAML,QAAN,CAAeL,YAAf;AACA;AACD,KAJD;AAKA,SAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAIJ,OAAOE,MAA3B,EAAmCE,GAAnC,EAAwC;AACvCtB,sBAAiBa,QAAjB,CAA0BK,OAAOI,CAAP,CAA1B,EAAqCR,QAArC,EAA+CZ,YAA/C;AACA;AACD;;;;;;mBAGaF,gB","file":"globalEvalStyles.js","sourcesContent":["'use strict';\n\nimport { async } from 'metal';\nimport { once } from './dom';\n\n/**\n * Utility functions for running styles.\n */\nclass globalEvalStyles {\n\t/**\n\t * Evaluates the given style.\n\t * @param {string} text\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic run(text, opt_appendFn) {\n\t\tconst style = document.createElement('style');\n\t\tstyle.innerHTML = text;\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates the given style file.\n\t * @param {string} href The file's path.\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the styles has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t * @return {Element} style\n\t */\n\tstatic runFile(href, opt_callback, opt_appendFn) {\n\t\tconst link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = href;\n\t\tglobalEvalStyles.runStyle(link, opt_callback, opt_appendFn);\n\t\treturn link;\n\t}\n\n\t/**\n\t * Evaluates the code referenced by the given style/link element.\n\t * @param {!Element} style\n\t * @param {function()=} opt_callback Optional function to be called\n\t *   when the script has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t *  @return {Element} style\n\t */\n\tstatic runStyle(style, opt_callback, opt_appendFn) {\n\t\tconst callback = function() {\n\t\t\topt_callback && opt_callback();\n\t\t};\n\t\tif (style.rel && style.rel !== 'stylesheet') {\n\t\t\tasync.nextTick(callback);\n\t\t\treturn;\n\t\t}\n\n\t\tif (style.tagName === 'STYLE') {\n\t\t\tasync.nextTick(callback);\n\t\t} else {\n\t\t\tonce(style, 'load', callback);\n\t\t\tonce(style, 'error', callback);\n\t\t}\n\n\t\tif (opt_appendFn) {\n\t\t\topt_appendFn(style);\n\t\t} else {\n\t\t\tdocument.head.appendChild(style);\n\t\t}\n\n\t\treturn style;\n\t}\n\n\t/**\n\t * Evaluates any style present in the given element.\n\t * @param {!Element} element\n\t * @param {function()=} opt_callback Optional function to be called when the\n\t *   style has been run.\n\t * @param {function()=} opt_appendFn Optional function to append the node\n\t *   into document.\n\t */\n\tstatic runStylesInElement(element, opt_callback, opt_appendFn) {\n\t\tconst styles = element.querySelectorAll('style,link');\n\t\tif (styles.length === 0 && opt_callback) {\n\t\t\tasync.nextTick(opt_callback);\n\t\t\treturn;\n\t\t}\n\n\t\tlet loadCount = 0;\n\t\tconst callback = function() {\n\t\t\tif (opt_callback && ++loadCount === styles.length) {\n\t\t\t\tasync.nextTick(opt_callback);\n\t\t\t}\n\t\t};\n\t\tfor (let i = 0; i < styles.length; i++) {\n\t\t\tglobalEvalStyles.runStyle(styles[i], callback, opt_appendFn);\n\t\t}\n\t}\n}\n\nexport default globalEvalStyles;\n"]}