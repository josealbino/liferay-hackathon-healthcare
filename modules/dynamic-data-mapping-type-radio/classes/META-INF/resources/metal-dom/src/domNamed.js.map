{"version":3,"sources":["domNamed.js"],"names":["addClasses","closest","append","buildFragment","contains","delegate","enterDocument","exitDocument","hasClass","isEmpty","match","next","on","once","parent","registerCustomEvent","removeChildren","removeClasses","replace","supportsEvent","toElement","toggleClasses","triggerEvent","elementsByTag_","supportCache_","customEvents","LAST_CONTAINER","USE_CAPTURE","blur","error","focus","invalid","load","scroll","elements","classes","length","i","addClassesWithNative_","addClassesWithoutNative_","element","split","forEach","className","classList","add","elementClassName","classesToAppend","indexOf","addElementListener_","eventName","listener","addToArr_","get","addSelectorListener_","selector","delegatingData","selectors","arr","key","value","push","attachDelegateEvent_","handle","handleDelegateEvent_","parentNode","child","NodeList","childArr","Array","prototype","slice","call","appendChild","htmlString","tempDiv","document","createElement","innerHTML","removeChild","firstChild","fragment","createDocumentFragment","element1","element2","documentElement","selectorOrTarget","callback","opt_default","customConfig","originalEvent","handler","bind","defaultListener_","isAbleToInteractWith_","node","opt_eventObj","button","matchesSelector","tagName","disabled","body","event","normalizeDelegateEvent_","ret","container","currentTarget","defFns","triggerDelegatedListeners_","triggerDefaultDelegatedListeners_","delegateTarget","hasClassWithNative_","hasClassWithoutNative_","childNodes","nodeType","p","Element","m","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","matchFallback_","nodes","querySelectorAll","nextSibling","stopPropagation","stopPropagation_","stopImmediatePropagation","stopImmediatePropagation_","opt_capture","addEventListener","domEventHandle","removeListener","apply","arguments","removeClassesWithNative_","removeClassesWithoutNative_","remove","trim","insertBefore","stopped","stoppedImmediate","Event","tag","hasOwnProperty","defaultPrevented","fn","defaultFns","currElement","target","limit","type","triggerElementListeners_","triggerSelectorListeners_","selectorOrElement","getElementById","substr","querySelector","toggleClassesWithNative_","toggleClassesWithoutNative_","toggle","classIndex","before","substring","after","lastContainer","listeners","triggerListeners_","eventObj","createEvent","initEvent","mixin","dispatchEvent","data","map","Object","keys"],"mappings":"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","file":"domNamed.js","sourcesContent":["'use strict';\n\nimport { isDef, isDocument, isDocumentFragment, isElement, isObject, isString, object } from 'metal';\nimport domData from './domData';\nimport DomDelegatedEventHandle from './DomDelegatedEventHandle';\nimport DomEventHandle from './DomEventHandle';\n\nconst elementsByTag_ = {};\nconst supportCache_ = {};\nexport const customEvents = {};\n\nconst LAST_CONTAINER = '__metal_last_container__';\nconst USE_CAPTURE = {\n\tblur: true,\n\terror: true,\n\tfocus: true,\n\tinvalid: true,\n\tload: true,\n\tscroll: true\n};\n\n/**\n * Adds the requested CSS classes to an element.\n * @param {!Element|!Nodelist} elements The element or elements to add CSS classes to.\n * @param {string} classes CSS classes to add.\n */\nexport function addClasses(elements, classes) {\n\tif (!isObject(elements) || !isString(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (let i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\taddClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\taddClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Adds the requested CSS classes to an element using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function(className) {\n\t\tif (className) {\n\t\t\telement.classList.add(className);\n\t\t}\n\t});\n}\n\n/**\n * Adds the requested CSS classes to an element without using classList.\n * @param {!Element} element The element to add CSS classes to.\n * @param {string} classes CSS classes to add.\n * @private\n */\nfunction addClassesWithoutNative_(element, classes) {\n\tconst elementClassName = ` ${element.className} `;\n\tlet classesToAppend = '';\n\n\tclasses = classes.split(' ');\n\n\tfor (let i = 0; i < classes.length; i++) {\n\t\tconst className = classes[i];\n\n\t\tif (elementClassName.indexOf(` ${className} `) === -1) {\n\t\t\tclassesToAppend += ` ${className}`;\n\t\t}\n\t}\n\n\tif (classesToAppend) {\n\t\telement.className = element.className + classesToAppend;\n\t}\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate.\n * @param {!Element} element\n * @param {string} eventName\n * @param {!function()} listener\n * @private\n */\nfunction addElementListener_(element, eventName, listener) {\n\taddToArr_(domData.get(element, 'listeners', {}), eventName, listener);\n}\n\n/**\n * Adds an event listener to the given element, to be triggered via delegate\n * selectors.\n * @param {!Element} element\n * @param {string} eventName\n * @param {string} selector\n * @param {!function()} listener\n * @private\n */\nfunction addSelectorListener_(element, eventName, selector, listener) {\n\tconst delegatingData = domData.get(element, 'delegating', {});\n\taddToArr_(delegatingData[eventName].selectors, selector, listener);\n}\n\n/**\n * Adds a value to an array inside an object, creating it first if it doesn't\n * yet exist.\n * @param {!Array} arr\n * @param {string} key\n * @param {*} value\n * @private\n */\nfunction addToArr_(arr, key, value) {\n\tif (!arr[key]) {\n\t\tarr[key] = [];\n\t}\n\tarr[key].push(value);\n}\n\n/**\n * Attaches a delegate listener, unless there's already one attached.\n * @param {!Element} element\n * @param {string} eventName\n * @private\n */\nfunction attachDelegateEvent_(element, eventName) {\n\tlet delegatingData = domData.get(element, 'delegating', {});\n\tif (!delegatingData[eventName]) {\n\t\tdelegatingData[eventName] = {\n\t\t\thandle: on(\n\t\t\t\telement,\n\t\t\t\teventName,\n\t\t\t\thandleDelegateEvent_,\n\t\t\t\t!!USE_CAPTURE[eventName]\n\t\t\t),\n\t\t\tselectors: {}\n\t\t};\n\t}\n}\n\n/**\n * Gets the closest element up the tree from the given element (including\n * itself) that matches the specified selector, or null if none match.\n * @param {Element} element\n * @param {string} selector\n * @return {Element}\n */\nexport function closest(element, selector) {\n\twhile (element && !match(element, selector)) {\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\n/**\n * Appends a child node with text or other nodes to a parent node. If\n * child is a HTML string it will be automatically converted to a document\n * fragment before appending it to the parent.\n * @param {!Element} parent The node to append nodes to.\n * @param {!(Element|NodeList|string)} child The thing to append to the parent.\n * @return {!Element} The appended child.\n */\nexport function append(parent, child) {\n\tif (isString(child)) {\n\t\tchild = buildFragment(child);\n\t}\n\tif (child instanceof NodeList) {\n\t\tconst childArr = Array.prototype.slice.call(child);\n\t\tfor (let i = 0; i < childArr.length; i++) {\n\t\t\tparent.appendChild(childArr[i]);\n\t\t}\n\t} else {\n\t\tparent.appendChild(child);\n\t}\n\treturn child;\n}\n\n/**\n * Helper for converting a HTML string into a document fragment.\n * @param {string} htmlString The HTML string to convert.\n * @return {!Element} The resulting document fragment.\n */\nexport function buildFragment(htmlString) {\n\tconst tempDiv = document.createElement('div');\n\ttempDiv.innerHTML = `<br>${htmlString}`;\n\ttempDiv.removeChild(tempDiv.firstChild);\n\n\tconst fragment = document.createDocumentFragment();\n\twhile (tempDiv.firstChild) {\n\t\tfragment.appendChild(tempDiv.firstChild);\n\t}\n\treturn fragment;\n}\n\n/**\n * Checks if the first element contains the second one.\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {boolean}\n */\nexport function contains(element1, element2) {\n\tif (isDocument(element1)) {\n\t\t// document.contains is not defined on IE9, so call it on documentElement instead.\n\t\treturn element1.documentElement.contains(element2);\n\t} else {\n\t\treturn element1.contains(element2);\n\t}\n}\n\n/**\n * Listens to the specified event on the given DOM element, but only calls the\n * given callback listener when it's triggered by elements that match the\n * given selector or target element.\n * @param {!Element} element The DOM element the event should be listened on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!Element|string} selectorOrTarget Either an element or css selector\n *     that should match the event for the listener to be triggered.\n * @param {!function(!Object)} callback Function to be called when the event\n *     is triggered. It will receive the normalized event object.\n * @param {boolean=} opt_default Optional flag indicating if this is a default\n *     listener. That means that it would only be executed after all non\n *     default listeners, and only if the event isn't prevented via\n *     `preventDefault`.\n * @return {!EventHandle} Can be used to remove the listener.\n */\nexport function delegate(element, eventName, selectorOrTarget, callback, opt_default) {\n\tconst customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.delegate) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\n\tif (opt_default) {\n\t\t// Wrap callback so we don't set property directly on it.\n\t\tcallback = callback.bind();\n\t\tcallback.defaultListener_ = true;\n\t}\n\n\tattachDelegateEvent_(element, eventName);\n\tif (isString(selectorOrTarget)) {\n\t\taddSelectorListener_(element, eventName, selectorOrTarget, callback);\n\t} else {\n\t\taddElementListener_(selectorOrTarget, eventName, callback);\n\t}\n\n\treturn new DomDelegatedEventHandle(\n\t\tisString(selectorOrTarget) ? element : selectorOrTarget,\n\t\teventName,\n\t\tcallback,\n\t\tisString(selectorOrTarget) ? selectorOrTarget : null\n\t);\n}\n\n/**\n * Verifies if the element is able to trigger the Click event,\n * simulating browsers behaviour, avoiding event listeners to be called by triggerEvent method.\n * @param {Element} node Element to be checked.\n * @param {string} eventName The event name.\n * @private\n */\nfunction isAbleToInteractWith_(node, eventName, opt_eventObj) {\n\tif (opt_eventObj && eventName === 'click' && opt_eventObj.button === 2) {\n\t\t// Firefox triggers \"click\" events on the document for right clicks. This\n\t\t// causes our delegate logic to trigger it for regular elements too, which\n\t\t// shouldn't happen. Ignoring them here.\n\t\treturn false;\n\t}\n\n\tconst matchesSelector = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'FIELDSET'];\n\tif (eventName === 'click' && matchesSelector.indexOf(node.tagName) > -1) {\n\t\treturn !(node.disabled || parent(node, 'fieldset[disabled]'));\n\t}\n\treturn true;\n}\n\n/**\n * Inserts node in document as last element.\n * @param {Element} node Element to remove children from.\n */\nexport function enterDocument(node) {\n\tnode && append(document.body, node);\n}\n\n/**\n * Removes node from document.\n * @param {Element} node Element to remove children from.\n */\nexport function exitDocument(node) {\n\tif (node && node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * This is called when an event is triggered by a delegate listener. All\n * matching listeners of this event type from `target` to `currentTarget` will\n * be triggered.\n * @param {!Event} event The event payload.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction handleDelegateEvent_(event) {\n\tnormalizeDelegateEvent_(event);\n\tlet ret = true;\n\tconst container = event.currentTarget;\n\tconst defFns = [];\n\n\tret &= triggerDelegatedListeners_(container, event, defFns);\n\tret &= triggerDefaultDelegatedListeners_(defFns, event);\n\n\tevent.delegateTarget = null;\n\tevent[LAST_CONTAINER] = container;\n\treturn ret;\n}\n\n/**\n * Checks if the given element has the requested css class.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n */\nexport function hasClass(element, className) {\n\tif ('classList' in element) {\n\t\treturn hasClassWithNative_(element, className);\n\t} else {\n\t\treturn hasClassWithoutNative_(element, className);\n\t}\n}\n\n/**\n * Checks if the given element has the requested css class using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithNative_(element, className) {\n\treturn element.classList.contains(className);\n}\n\n/**\n * Checks if the given element has the requested css class without using classList.\n * @param {!Element} element\n * @param {string} className\n * @return {boolean}\n * @private\n */\nfunction hasClassWithoutNative_(element, className) {\n\treturn (` ${element.className} `).indexOf(` ${className} `) >= 0;\n}\n\n/**\n * Checks if the given element is empty or not.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isEmpty(element) {\n\treturn element.childNodes.length === 0;\n}\n\n/**\n * Check if an element matches a given selector.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n */\nexport function match(element, selector) {\n\tif (!element || element.nodeType !== 1) {\n\t\treturn false;\n\t}\n\n\tconst p = Element.prototype;\n\tconst m = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector;\n\tif (m) {\n\t\treturn m.call(element, selector);\n\t}\n\n\treturn matchFallback_(element, selector);\n}\n\n/**\n * Check if an element matches a given selector, using an internal implementation\n * instead of calling existing javascript functions.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean}\n * @private\n */\nfunction matchFallback_(element, selector) {\n\tconst nodes = document.querySelectorAll(selector, element.parentNode);\n\tfor (let i = 0; i < nodes.length; ++i) {\n\t\tif (nodes[i] === element) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * Returns the next sibling of the given element that matches the specified\n * selector, or null if there is none.\n * @param {!Element} element\n * @param {?string} selector\n */\nexport function next(element, selector) {\n\tdo {\n\t\telement = element.nextSibling;\n\t\tif (element && match(element, selector)) {\n\t\t\treturn element;\n\t\t}\n\t} while (element);\n\treturn null;\n}\n\n/**\n * Normalizes the event payload for delegate listeners.\n * @param {!Event} event\n * @private\n */\nfunction normalizeDelegateEvent_(event) {\n\tevent.stopPropagation = stopPropagation_;\n\tevent.stopImmediatePropagation = stopImmediatePropagation_;\n}\n\n/**\n * Listens to the specified event on the given DOM element. This function normalizes\n * DOM event payloads and functions so they'll work the same way on all supported\n * browsers.\n * @param {!Element|string} element The DOM element to listen to the event on, or\n *   a selector that should be delegated on the entire document.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event is\n *   triggered. It will receive the normalized event object.\n * @param {boolean} opt_capture Flag indicating if listener should be triggered\n *   during capture phase, instead of during the bubbling phase. Defaults to false.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nexport function on(element, eventName, callback, opt_capture) {\n\tif (isString(element)) {\n\t\treturn delegate(document, eventName, element, callback);\n\t}\n\tconst customConfig = customEvents[eventName];\n\tif (customConfig && customConfig.event) {\n\t\teventName = customConfig.originalEvent;\n\t\tcallback = customConfig.handler.bind(customConfig, callback);\n\t}\n\telement.addEventListener(eventName, callback, opt_capture);\n\treturn new DomEventHandle(element, eventName, callback, opt_capture);\n}\n\n/**\n * Listens to the specified event on the given DOM element once. This\n * function normalizes DOM event payloads and functions so they'll work the\n * same way on all supported browsers.\n * @param {!Element} element The DOM element to listen to the event on.\n * @param {string} eventName The name of the event to listen to.\n * @param {!function(!Object)} callback Function to be called when the event\n *   is triggered. It will receive the normalized event object.\n * @return {!DomEventHandle} Can be used to remove the listener.\n */\nexport function once(element, eventName, callback) {\n\tconst domEventHandle = on(element, eventName, function() {\n\t\tdomEventHandle.removeListener();\n\t\treturn callback.apply(this, arguments);\n\t});\n\treturn domEventHandle;\n}\n\n/**\n * Gets the first parent from the given element that matches the specified\n * selector, or null if none match.\n * @param {!Element} element\n * @param {string} selector\n * @return {Element}\n */\nexport function parent(element, selector) {\n\treturn closest(element.parentNode, selector);\n}\n\n/**\n * Registers a custom event.\n * @param {string} eventName The name of the custom event.\n * @param {!Object} customConfig An object with information about how the event\n *   should be handled.\n */\nexport function registerCustomEvent(eventName, customConfig) {\n\tcustomEvents[eventName] = customConfig;\n}\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Element} node Element to remove children from.\n */\nexport function removeChildren(node) {\n\tlet child;\n\twhile ((child = node.firstChild)) {\n\t\tnode.removeChild(child);\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element.\n * @param {!Element|!NodeList} elements The element or elements to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n */\nexport function removeClasses(elements, classes) {\n\tif (!isObject(elements) || !isString(classes)) {\n\t\treturn;\n\t}\n\n\tif (!elements.length) {\n\t\telements = [elements];\n\t}\n\n\tfor (let i = 0; i < elements.length; i++) {\n\t\tif ('classList' in elements[i]) {\n\t\t\tremoveClassesWithNative_(elements[i], classes);\n\t\t} else {\n\t\t\tremoveClassesWithoutNative_(elements[i], classes);\n\t\t}\n\t}\n}\n\n/**\n * Removes the requested CSS classes from an element using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function(className) {\n\t\tif (className) {\n\t\t\telement.classList.remove(className);\n\t\t}\n\t});\n}\n\n/**\n * Removes the requested CSS classes from an element without using classList.\n * @param {!Element} element The element to remove CSS classes from.\n * @param {string} classes CSS classes to remove.\n * @private\n */\nfunction removeClassesWithoutNative_(element, classes) {\n\tlet elementClassName = ` ${element.className} `;\n\n\tclasses = classes.split(' ');\n\n\tfor (let i = 0; i < classes.length; i++) {\n\t\telementClassName = elementClassName.replace(` ${classes[i]} `, ' ');\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Replaces the first element with the second.\n * @param {Element} element1\n * @param {Element} element2\n */\nexport function replace(element1, element2) {\n\tif (element1 && element2 && element1 !== element2 && element1.parentNode) {\n\t\telement1.parentNode.insertBefore(element2, element1);\n\t\telement1.parentNode.removeChild(element1);\n\t}\n}\n\n/**\n * The function that replaces `stopImmediatePropagation_` for events.\n * @private\n */\nfunction stopImmediatePropagation_() {\n\tconst event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tevent.stoppedImmediate = true;\n\tEvent.prototype.stopImmediatePropagation.call(event);\n}\n\n/**\n * The function that replaces `stopPropagation` for events.\n * @private\n */\nfunction stopPropagation_() {\n\tconst event = this; // eslint-disable-line\n\tevent.stopped = true;\n\tEvent.prototype.stopPropagation.call(event);\n}\n\n/**\n * Checks if the given element supports the given event type.\n * @param {!Element|string} element The DOM element or element tag name to check.\n * @param {string} eventName The name of the event to check.\n * @return {boolean}\n */\nexport function supportsEvent(element, eventName) {\n\tif (customEvents[eventName]) {\n\t\treturn true;\n\t}\n\n\tif (isString(element)) {\n\t\tif (!elementsByTag_[element]) {\n\t\t\telementsByTag_[element] = document.createElement(element);\n\t\t}\n\t\telement = elementsByTag_[element];\n\t}\n\n\tconst tag = element.tagName;\n\tif (!supportCache_[tag] || !supportCache_[tag].hasOwnProperty(eventName)) {\n\t\tsupportCache_[tag] = supportCache_[tag] || {};\n\t\tsupportCache_[tag][eventName] = 'on' + eventName in element;\n\t}\n\treturn supportCache_[tag][eventName];\n}\n\n/**\n * This triggers all default matched delegated listeners of a given event type.\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n * @param {!Event} event\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDefaultDelegatedListeners_(defFns, event) {\n\tlet ret = true;\n\n\tfor (let i = 0; i < defFns.length && !event.defaultPrevented; i++) {\n\t\tevent.delegateTarget = defFns[i].element;\n\t\tret &= defFns[i].fn(event);\n\t}\n\n\treturn ret;\n}\n\n/**\n * This triggers all matched delegated listeners of a given event type when its\n * delegated target is able to interact.\n * @param {!Element} container\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerDelegatedListeners_(container, event, defaultFns) {\n\tlet ret = true;\n\tlet currElement = event.target;\n\tconst limit = container.parentNode;\n\n\twhile (currElement && currElement !== limit && !event.stopped) {\n\t\tif (isAbleToInteractWith_(currElement, event.type, event)) {\n\t\t\tevent.delegateTarget = currElement;\n\t\t\tret &= triggerElementListeners_(currElement, event, defaultFns);\n\t\t\tret &= triggerSelectorListeners_(container, currElement, event, defaultFns);\n\t\t}\n\t\tcurrElement = currElement.parentNode;\n\t}\n\n\treturn ret;\n}\n\n/**\n * Converts the given argument to a DOM element. Strings are assumed to\n * be selectors, and so a matched element will be returned. If the arg\n * is already a DOM element it will be the return value.\n * @param {string|Element|Document} selectorOrElement\n * @return {Element} The converted element, or null if none was found.\n */\nexport function toElement(selectorOrElement) {\n\tif (isElement(selectorOrElement) || isDocument(selectorOrElement) || isDocumentFragment(selectorOrElement)) {\n\t\treturn selectorOrElement;\n\t} else if (isString(selectorOrElement)) {\n\t\tif (selectorOrElement[0] === '#' && selectorOrElement.indexOf(' ') === -1) {\n\t\t\treturn document.getElementById(selectorOrElement.substr(1));\n\t\t} else {\n\t\t\treturn document.querySelector(selectorOrElement);\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element. If any of the classes\n * is present, it will be removed from the element, or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n */\nexport function toggleClasses(element, classes) {\n\tif (!isObject(element) || !isString(classes)) {\n\t\treturn;\n\t}\n\n\tif ('classList' in element) {\n\t\ttoggleClassesWithNative_(element, classes);\n\t} else {\n\t\ttoggleClassesWithoutNative_(element, classes);\n\t}\n}\n\n/**\n * Adds or removes one or more classes from an element using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithNative_(element, classes) {\n\tclasses.split(' ').forEach(function(className) {\n\t\telement.classList.toggle(className);\n\t});\n}\n\n/**\n * Adds or removes one or more classes from an element without using classList.\n * If any of the classes is present, it will be removed from the element,\n * or added otherwise.\n * @param {!Element} element The element which classes will be toggled.\n * @param {string} classes The classes which have to added or removed from the element.\n * @private\n */\nfunction toggleClassesWithoutNative_(element, classes) {\n\tlet elementClassName = ` ${element.className} `;\n\n\tclasses = classes.split(' ');\n\n\tfor (let i = 0; i < classes.length; i++) {\n\t\tconst className = ` ${classes[i]} `;\n\t\tconst classIndex = elementClassName.indexOf(className);\n\n\t\tif (classIndex === -1) {\n\t\t\telementClassName = `${elementClassName}${classes[i]} `;\n\t\t} else {\n\t\t\tconst before = elementClassName.substring(0, classIndex);\n\t\t\tconst after = elementClassName.substring(classIndex + className.length);\n\t\t\telementClassName = `${before} ${after}`;\n\t\t}\n\t}\n\n\telement.className = elementClassName.trim();\n}\n\n/**\n * Triggers all listeners for the given event type that are stored in the\n * specified element.\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerElementListeners_(element, event, defaultFns) {\n\tconst lastContainer = event[LAST_CONTAINER];\n\tif (!isDef(lastContainer) || !contains(lastContainer, element)) {\n\t\tconst listeners = domData.get(element, 'listeners', {})[event.type];\n\t\treturn triggerListeners_(listeners, event, element, defaultFns);\n\t}\n\treturn true;\n}\n\n/**\n * Triggers the specified event on the given element.\n * NOTE: This should mostly be used for testing, not on real code.\n * @param {!Element} element The node that should trigger the event.\n * @param {string} eventName The name of the event to be triggred.\n * @param {Object=} opt_eventObj An object with data that should be on the\n *   triggered event's payload.\n */\nexport function triggerEvent(element, eventName, opt_eventObj) {\n\tif (isAbleToInteractWith_(element, eventName, opt_eventObj)) {\n\t\tconst eventObj = document.createEvent('HTMLEvents');\n\t\teventObj.initEvent(eventName, true, true);\n\t\tobject.mixin(eventObj, opt_eventObj);\n\t\telement.dispatchEvent(eventObj);\n\t}\n}\n\n/**\n * Triggers the given listeners array.\n * @param {Array<!function()>} listeners\n * @param {!Event} event\n * @param {!Element} element\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerListeners_(listeners, event, element, defaultFns) {\n\tlet ret = true;\n\tlisteners = listeners || [];\n\tfor (let i = 0; i < listeners.length && !event.stoppedImmediate; i++) {\n\t\tif (listeners[i].defaultListener_) {\n\t\t\tdefaultFns.push({\n\t\t\t\telement,\n\t\t\t\tfn: listeners[i]\n\t\t\t});\n\t\t} else {\n\t\t\tret &= listeners[i](event);\n\t\t}\n\t}\n\treturn ret;\n}\n\n/**\n * Triggers all selector listeners for the given event.\n * @param {!Element} container\n * @param {!Element} element\n * @param {!Event} event\n * @param {!Array} defaultFns Array to collect default listeners in, instead\n *     of running them.\n * @return {boolean} False if at least one of the triggered callbacks returns\n *     false, or true otherwise.\n * @private\n */\nfunction triggerSelectorListeners_(container, element, event, defaultFns) {\n\tlet ret = true;\n\tconst data = domData.get(container, 'delegating', {});\n\tconst map = data[event.type].selectors;\n\tconst selectors = Object.keys(map);\n\tfor (let i = 0; i < selectors.length && !event.stoppedImmediate; i++) {\n\t\tif (match(element, selectors[i])) {\n\t\t\tconst listeners = map[selectors[i]];\n\t\t\tret &= triggerListeners_(listeners, event, element, defaultFns);\n\t\t}\n\t}\n\treturn ret;\n}\n"]}