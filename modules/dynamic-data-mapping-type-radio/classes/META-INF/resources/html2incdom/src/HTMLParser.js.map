{"version":3,"sources":["HTMLParser.js"],"names":["startTag","endTag","attr","empty","makeMap","block","inline","closeSelf","fillAttrs","special","HTMLParser","window","html","handler","index","chars","match","stack","last","length","indexOf","comment","substring","replace","parseEndTag","parseStartTag","text","RegExp","all","tag","tagName","rest","unary","toLowerCase","push","start","attrs","name","value","arguments","escaped","pos","i","end","str","obj","items","split","call"],"mappings":"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","file":"HTMLParser.js","sourcesContent":["/* jshint ignore:start */\n\n/*\n * HTML5 Parser By Sam Blowes\n *\n * Designed for HTML5 documents\n *\n * Original code by John Resig (ejohn.org)\n * http://ejohn.org/blog/pure-javascript-html-parser/\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n *\n * ----------------------------------------------------------------------------\n * License\n * ----------------------------------------------------------------------------\n *\n * This code is triple licensed using Apache Software License 2.0,\n * Mozilla Public License or GNU Public License\n *\n * ////////////////////////////////////////////////////////////////////////////\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License.  You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * ////////////////////////////////////////////////////////////////////////////\n *\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * Software distributed under the License is distributed on an \"AS IS\"\n * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\n * License for the specific language governing rights and limitations\n * under the License.\n *\n * The Original Code is Simple HTML Parser.\n *\n * The Initial Developer of the Original Code is Erik Arvidsson.\n * Portions created by Erik Arvidssson are Copyright (C) 2004. All Rights\n * Reserved.\n *\n * ////////////////////////////////////////////////////////////////////////////\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n * @license\n */\n\n/*\n *\n * ----------------------------------------------------------------------------\n * Usage\n * ----------------------------------------------------------------------------\n *\n * // Use like so:\n * HTMLParser(htmlString, {\n *     start: function(tag, attrs, unary) {},\n *     end: function(tag) {},\n *     chars: function(text) {},\n *     comment: function(text) {}\n * });\n *\n * // or to get an XML string:\n * HTMLtoXML(htmlString);\n *\n * // or to get an XML DOM Document\n * HTMLtoDOM(htmlString);\n *\n * // or to inject into an existing document/DOM node\n * HTMLtoDOM(htmlString, document);\n * HTMLtoDOM(htmlString, document.body);\n *\n */\n\n(function () {\n\t// Regular Expressions for parsing tags and attributes\n\tvar startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/,\n\t\tendTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/,\n\t\tattr = /([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\n\n\t// Empty Elements - HTML 5\n\tvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr\");\n\n\t// Block Elements - HTML 5\n\tvar block = makeMap(\"a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\n\n\t// Inline Elements - HTML 5\n\tvar inline = makeMap(\"abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\n\n\t// Elements that you can, intentionally, leave open\n\t// (and which close themselves)\n\tvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n\n\t// Attributes that have their values filled in disabled=\"disabled\"\n\tvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\n\n\t// Special Elements (can contain anything)\n\tvar special = makeMap(\"script,style\");\n\n\tvar HTMLParser = window.HTMLParser = function (html, handler) {\n\t\tvar index, chars, match, stack = [], last = html;\n\t\tstack.last = function () {\n\t\t\treturn this[this.length - 1];\n\t\t};\n\n\t\twhile (html) {\n\t\t\tchars = true;\n\n\t\t\t// Make sure we're not in a script or style element\n\t\t\tif (!stack.last() || !special[stack.last()]) {\n\n\t\t\t\t// Comment\n\t\t\t\tif (html.indexOf(\"<!--\") == 0) {\n\t\t\t\t\tindex = html.indexOf(\"-->\");\n\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tif (handler.comment)\n\t\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// end tag\n\t\t\t\t} else if (html.indexOf(\"</\") == 0) {\n\t\t\t\t\tmatch = html.match(endTag);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// start tag\n\t\t\t\t} else if (html.indexOf(\"<\") == 0) {\n\t\t\t\t\tmatch = html.match(startTag);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (chars) {\n\t\t\t\t\tindex = html.indexOf(\"<\");\n\n\t\t\t\t\tvar text = index < 0 ? html : html.substring(0, index);\n\t\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\n\n\t\t\t\t\tif (handler.chars)\n\t\t\t\t\t\thandler.chars(text);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\thtml = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\n\t\t\t\t\ttext = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\n\t\t\t\t\tif (handler.chars)\n\t\t\t\t\t\thandler.chars(text);\n\n\t\t\t\t\treturn \"\";\n\t\t\t\t});\n\n\t\t\t\tparseEndTag(\"\", stack.last());\n\t\t\t}\n\n\t\t\tif (html == last)\n\t\t\t\tthrow \"Parse Error: \" + html;\n\t\t\tlast = html;\n\t\t}\n\n\t\t// Clean up any remaining tags\n\t\tparseEndTag();\n\n\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\ttagName = tagName.toLowerCase();\n\n\t\t\tif (block[tagName]) {\n\t\t\t\t// Close last tag if it's inline, except if it's a \"span\" (since people\n\t\t\t\t// usually add anything they want to spans, and browsers allow it).\n\t\t\t\t// Note: this exception for \"span\" was added manually (i.e. it's not\n\t\t\t\t// present in the original code).\n\t\t\t\twhile (stack.last() && inline[stack.last()] && stack.last() !== 'span') {\n\t\t\t\t\tparseEndTag(\"\", stack.last());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (closeSelf[tagName] && stack.last() == tagName) {\n\t\t\t\tparseEndTag(\"\", tagName);\n\t\t\t}\n\n\t\t\tunary = empty[tagName] || !!unary;\n\n\t\t\tif (!unary)\n\t\t\t\tstack.push(tagName);\n\n\t\t\tif (handler.start) {\n\t\t\t\tvar attrs = [];\n\n\t\t\t\trest.replace(attr, function (match, name) {\n\t\t\t\t\tvar value = arguments[2] ? arguments[2] :\n\t\t\t\t\t\targuments[3] ? arguments[3] :\n\t\t\t\t\t\targuments[4] ? arguments[4] :\n\t\t\t\t\t\tfillAttrs[name] ? name : \"\";\n\n\t\t\t\t\tattrs.push({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tescaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') //\"\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tif (handler.start)\n\t\t\t\t\thandler.start(tagName, attrs, unary);\n\t\t\t}\n\t\t}\n\n\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t// If no tag name is provided, clean shop\n\t\t\tif (!tagName)\n\t\t\t\tvar pos = 0;\n\n\t\t\t\t// Find the closest opened tag of the same type\n\t\t\telse\n\t\t\t\tfor (var pos = stack.length - 1; pos >= 0; pos--)\n\t\t\t\t\tif (stack[pos] == tagName)\n\t\t\t\t\t\tbreak;\n\n\t\t\tif (pos >= 0) {\n\t\t\t\t// Close all the open elements, up the stack\n\t\t\t\tfor (var i = stack.length - 1; i >= pos; i--)\n\t\t\t\t\tif (handler.end)\n\t\t\t\t\t\thandler.end(stack[i]);\n\n\t\t\t\t// Remove the open elements from the stack\n\t\t\t\tstack.length = pos;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction makeMap(str) {\n\t\tvar obj = {}, items = str.split(\",\");\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t\tobj[items[i]] = true;\n\t\treturn obj;\n\t}\n}).call(this);\n\n/* jshint ignore:end */\n"]}